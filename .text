import "mapbox-gl/dist/mapbox-gl.css";
import mapboxgl from "mapbox-gl";
const myLocation = document.querySelector('[data-tool="location"]');
mapboxgl.accessToken =
  "pk.eyJ1IjoibmFqaW1vdiIsImEiOiJjbWRmazhzdG0wZHVzMmlzOGdrNHFreWV6In0.ENVcoFkxKIqNeCEax2JoFg";
const map = new mapboxgl.Map({
  container: "map",
  logoPosition: "bottom-right",
  attributionControl: false,
  center: [69.2229263, 41.3460357], // Centered on the circle
  style: "mapbox://styles/mapbox/dark-v11",
  // style: "mapbox://styles/mapbox/light-v11",
  projection: "mercator",
  zoom: 14, // Zoom in closer
});
const state = {
  longitude: null,
  latitude: null,
  id: null,
  tracking: false,
};

map.on("load", async () => {
  console.log("Xarita yuklandi");
  const response = await (await fetch("/data.geojson")).json();
  map.addSource("me", {
    type: "geojson",
    data: response,
  });

  const size = 150; // Size of the pulsing circle

  const pulsingDot = {
    width: size,
    height: size,
    data: new Uint8Array(size * size * 4),

    onAdd: function () {
      const canvas = document.createElement("canvas");
      canvas.width = this.width;
      canvas.height = this.height;
      this.context = canvas.getContext("2d");
    },

    render: function () {
      const duration = 1500;
      const t = (performance.now() % duration) / duration;

      const radius = (size / 2) * 0.3;
      const outerRadius = (size / 2) * 0.7 * t + radius;
      const context = this.context;

      // Draw the outer circle
      context.clearRect(0, 0, this.width, this.height);
      context.beginPath();
      context.arc(
        this.width / 2,
        this.height / 2,
        outerRadius,
        0,
        Math.PI * 2
      );
      context.fillStyle = `rgba(102, 126, 234, ${1 - t})`;
      context.fill();

      // Draw the inner circle
      context.beginPath();
      context.arc(this.width / 2, this.height / 2, radius, 0, Math.PI * 2);
      context.fillStyle = "rgba(102, 126, 234, 1)";
      context.strokeStyle = "white";
      context.lineWidth = 2 + 4 * (1 - t);
      context.fill();
      context.stroke();

      this.data = context.getImageData(
        0,
        0,
        this.width,
        this.height
      ).data;

      map.triggerRepaint();
      return true;
    },
  };

  map.addImage("pulsing-dot", pulsingDot, { pixelRatio: 2 });

  map.addLayer({
    id: "me",
    type: "symbol",
    source: "me",
    layout: {
      "icon-image": "pulsing-dot",
    },
  });
  myLocation.onclick = () => {
    if (!state.tracking) {
      // alert("click");
      // state.tracking = true;
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const userLat = position.coords.latitude;
          const userLon = position.coords.longitude;
          console.log(userLat, userLon);
        },
        (error) => {
          console.error(error);
        },
      );
    }
  };
});
